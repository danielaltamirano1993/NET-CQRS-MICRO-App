// <auto-generated />
using System;
using Microservicio.Items.API.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Microservicio.Items.API.Migrations
{
    [DbContext(typeof(ItemDbContext))]
    [Migration("20251002163129_FinalSchemaSetup")]
    partial class FinalSchemaSetup
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microservicio.Items.API.App.Dto.ItemTrabajoSqlResult", b =>
                {
                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaEntrega")
                        .HasColumnType("datetime2");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<byte>("Relevancia")
                        .HasColumnType("tinyint");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsuarioAsignado")
                        .HasColumnType("int");

                    b.ToTable("ItemTrabajoSqlResults");
                });

            modelBuilder.Entity("Microservicio.Items.API.Domain.HistorialAsignacion", b =>
                {
                    b.Property<int>("HistorialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HistorialId"));

                    b.Property<string>("Comentarios")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("FechaAsignacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("ItemTrabajoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioReferenciaUsuarioId")
                        .HasColumnType("int");

                    b.HasKey("HistorialId");

                    b.HasIndex("ItemTrabajoId");

                    b.HasIndex("UsuarioId");

                    b.HasIndex("UsuarioReferenciaUsuarioId");

                    b.ToTable("HistorialAsignacion");
                });

            modelBuilder.Entity("Microservicio.Items.API.Domain.ItemTrabajo", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemId"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaEntrega")
                        .HasColumnType("datetime2");

                    b.Property<byte>("Relevancia")
                        .HasColumnType("tinyint");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("UsuarioAsignado")
                        .HasColumnType("int");

                    b.HasKey("ItemId");

                    b.HasIndex("UsuarioAsignado");

                    b.ToTable("ItemTrabajo");
                });

            modelBuilder.Entity("Microservicio.Items.API.Domain.UsuarioReferencia", b =>
                {
                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<int>("ItemsCompletados")
                        .HasColumnType("int");

                    b.Property<int>("ItemsPendientes")
                        .HasColumnType("int");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("UsuarioId");

                    b.ToTable("UsuarioReferencia");
                });

            modelBuilder.Entity("Microservicio.Items.API.Domain.HistorialAsignacion", b =>
                {
                    b.HasOne("Microservicio.Items.API.Domain.ItemTrabajo", null)
                        .WithMany()
                        .HasForeignKey("ItemTrabajoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microservicio.Items.API.Domain.UsuarioReferencia", null)
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microservicio.Items.API.Domain.UsuarioReferencia", null)
                        .WithMany("Historiales")
                        .HasForeignKey("UsuarioReferenciaUsuarioId");
                });

            modelBuilder.Entity("Microservicio.Items.API.Domain.ItemTrabajo", b =>
                {
                    b.HasOne("Microservicio.Items.API.Domain.UsuarioReferencia", "Usuario")
                        .WithMany("ItemsAsignados")
                        .HasForeignKey("UsuarioAsignado")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Microservicio.Items.API.Domain.UsuarioReferencia", b =>
                {
                    b.Navigation("Historiales");

                    b.Navigation("ItemsAsignados");
                });
#pragma warning restore 612, 618
        }
    }
}
